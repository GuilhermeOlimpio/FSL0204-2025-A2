library(reticulate)
use_python("D:/python.exe", required = TRUE)
py_config()
library(reticulate)
use_python("D:/python.exe", required = TRUE)
reticulate::py_run_string("import pandas as pd; import sklearn; import numpy as np; print(pd.__version__, np.__version__)")
reticulate::py_last_error()
library(reticulate)
use_python("D:/python.exe", required = TRUE)
reticulate::py_run_string("
import pandas as pd
import numpy as np
import sklearn
print('pandas:', pd.__version__, 'numpy:', np.__version__)
")
library(reticulate)
use_python("D:/python.exe", required = TRUE)
py_config()
library(reticulate)
# Cria um ambiente virtual Python limpo no D: (ex.: d:/py_env)
virtualenv_create(envname = "py_env", python = "D:/python.exe")
pip numpy
library(reticulate)
use_virtualenv("D:/py_env", required = TRUE)
library(reticulate)
# Força o uso do ambiente virtual criado
use_virtualenv("D:/py_env", required = TRUE)
# Confirma que o Python e os pacotes estão corretos
py_config()
reticulate::py_run_string("
import pandas as pd
import numpy as np
import sklearn
print('pandas:', pd.__version__, 'numpy:', np.__version__)
")
dir.create("D:/Rlibs", recursive = TRUE)
.libPaths("D:/Rlibs")  # define esta pasta como principal
install.packages(c("packrat", "rsconnect"), lib = "D:/Rlibs")
install.packages(c("packrat", "rsconnect"), lib = "D:/Rlibs")
install.packages(c("packrat", "rsconnect"), lib = "D:/Rlibs")
install.packages(c("packrat", "rsconnect"), lib = "D:/Rlibs")
Sys.setenv(TMPDIR = "D:/Rtemp")   # cria uma pasta temporária no D:
dir.create("D:/Rtemp", showWarnings = FALSE)
Sys.getenv("TMPDIR")
quarto::render("apresentacao.qmd", output_format = "html")
# cria pasta temporária no D:
dir.create("D:/Rtemp", showWarnings = FALSE)
# define essa pasta como temporária
Sys.setenv(TMPDIR = "D:/Rtemp")
# confere se está definido
Sys.getenv("TMPDIR")
quarto::render("apresentacao.qmd", output_format = "html")
dir.create("D:/Rlibs", recursive = TRUE)
.libPaths("D:/Rlibs")  # define como biblioteca principal
install.packages("quarto", lib = "D:/Rlibs")
install.packages(c("packrat", "rsconnect"), lib = "D:/Rlibs")
library(quarto, lib.loc = "D:/Rlibs")
quarto::quarto_check()  # verifica se o Quarto CLI está detectado
quarto clean
quarto::quarto_preview("D:/FSL0204-2025_Métodos digitais/Métodos digitais em Sociologia.qmd")
1+!
1+1
1+1=
1=1
1==1
1=/=1
install.packages("quarto")
library(quarto)
quarto render FSL0204-2025_Métodos digitais.qmd
quarto render Métodos digitais em Sociologia.qmd
library(tinytex)
detach("package:tinytex", unload = TRUE)
library(tinytex)
detach("package:tinytex", unload = TRUE)
library(tinytex)
install.packages("tinytex")        # instala o pacote TinyTeX no R
tinytex::install_tinytex()         # instala a distribuição LaTeX leve
library(tinytex)
git init
